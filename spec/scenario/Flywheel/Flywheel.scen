Macro DeployComptroller price=1.0
    Unitroller Deploy
    PriceOracle Deploy Fixed price
    PriceOracleProxy Deploy Admin (PriceOracle Address) (Address Zero) (Address Zero) (Address Zero) (Address Zero) (Address Zero)
    ComptrollerImpl Deploy Scenario ComptrollerScen
    Unitroller SetPendingImpl ComptrollerScen
    ComptrollerImpl ComptrollerScen Become
    Comptroller SetPriceOracle (PriceOracleProxy Address)
    Comptroller SetCloseFactor 0.5
    Comptroller LiquidationIncentive 1.1

Macro SetupMarkets
    NewSToken ZRX sZRX
    NewSToken BAT sBAT
    Support sZRX collateralFactor:0.5
    Support sBAT collateralFactor:0.5

Macro SetupStrikeToken strikeInitAmount=5000000e18
    Erc20 Deploy Standard STRK "STRK Token" 18
    Give (Address Comptroller) strikeInitAmount STRK
    Comptroller Send "setSTRKAddress(address)" (Address STRK)

-- NewComptroller, but with markets listed so that we can make them STRK markets in constructor
Macro FlywheelComptroller price=1.0 borrowRate=0.000005 strikeInitAmount=5000000e18
    DeployComptroller price
    SetupMarkets
    SetupStrikeToken strikeInitAmount

Macro InitUsage
    Prep Geoff 100e18 ZRX sZRX
    Mint Geoff 50e18 sZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn Some BAT sBAT
    Mint Coburn 6e18 sBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn sBAT
    Borrow Coburn 1e18 sZRX

Macro InitUsage2
    Prep Geoff 100e18 ZRX sZRX
    Mint Geoff 50e18 sZRX--tokenbalance = 50e18 / 2e9 = 2.5e10
    Prep Coburn 100e18 BAT sBAT
    Mint Coburn 50e18 sBAT--tokenbalance = 6e18 / 2e9 = 3e9
    EnterMarkets Coburn sBAT

Test "Market supply and borrow states properly initialized"
    DeployComptroller
    FastForward 100 Blocks
    SetupMarkets
    Assert Equal (Comptroller StrikeSupplyState sZRX "index") 1e36
    Assert Equal (Comptroller StrikeSupplyState sZRX "block") 100
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 1e36
    Assert Equal (Comptroller StrikeBorrowState sZRX "block") 100
    Assert Equal (Comptroller StrikeSupplyState sBAT "index") 1e36
    Assert Equal (Comptroller StrikeSupplyState sBAT "block") 100
    Assert Equal (Comptroller StrikeBorrowState sBAT "index") 1e36
    Assert Equal (Comptroller StrikeBorrowState sBAT "block") 100

Test "Accrue supplier STRK during a mint"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (0.01e18) (0)
    Assert Equal (Comptroller StrikeSupplyState sZRX "index") 1000000000000000000000000000000000000
    FastForward 300000 Blocks
    Assert Equal (Comptroller StrikeAccrued Geoff) 0
    Mint Geoff 1e18 sZRX
    Assert Equal (Comptroller StrikeAccrued Geoff) 3000e18 -- 0.01e18 * 300,000
    Assert Equal (Comptroller StrikeSupplyState sZRX "index") 120000000001000000000000000000000000000000000000
    Assert Equal (Comptroller StrikeSupplyState sZRX "block") 300000
    Assert Equal (Erc20 STRK TokenBalance Geoff) 0
    Comptroller ClaimStrike Geoff
    Assert Equal (Erc20 STRK TokenBalance Geoff) (3000e18)

Test "Accrue borrower STRK during a borrow"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (0.01e18) (0.01e18)
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 1000000000000000000000000000000000000
    FastForward 300000 Blocks
    Assert Equal (Comptroller StrikeAccrued Coburn) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) 1000000000000000000000000000000000000
    Borrow Coburn 0.1e18 sZRX
    Assert Equal (Comptroller StrikeAccrued Coburn) (3000e18)
    Comptroller ClaimStrike Coburn
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 3.001e39
    Assert Equal (Comptroller StrikeBorrowState sZRX "block") 300000
    Assert Equal (Erc20 STRK TokenBalance Coburn) (3000e18)
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) (3.001e39)

Test "Accrue supplier STRK during redeem"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (0.01e18) (0)
    Assert Equal (Comptroller StrikeSupplyState sZRX "index") 1000000000000000000000000000000000000
    FastForward 300000 Blocks
    Assert Equal (Comptroller StrikeAccrued Geoff) 0
    Redeem Geoff 1e9 sZRX
    Assert Equal (Comptroller StrikeAccrued Geoff) 3000e18 -- 0.01e18 * 300,000
    Assert Equal (Comptroller StrikeSupplyState sZRX "index") 120000000001000000000000000000000000000000000000
    Assert Equal (Comptroller StrikeSupplyState sZRX "block") 300000
    Assert Equal (Erc20 STRK TokenBalance Geoff) 0
    Comptroller ClaimStrike Geoff
    Assert Equal (Erc20 STRK TokenBalance Geoff) (3000e18)

Test "Accrue borrower STRK during a repayBorrow"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (0.01e18) (0.01e18)
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 1000000000000000000000000000000000000
    FastForward 300000 Blocks
    Assert Equal (Comptroller StrikeAccrued Coburn) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) 1000000000000000000000000000000000000
    Prep Coburn 0.5e18 ZRX sZRX
    RepayBorrow Coburn 0.5e18 sZRX
    Assert Equal (Comptroller StrikeAccrued Coburn) (3000e18)
    Comptroller ClaimStrike Coburn
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 3.001e39
    Assert Equal (Comptroller StrikeBorrowState sZRX "block") 300000
    Assert Equal (Erc20 STRK TokenBalance Coburn) (3000e18)
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) (3.001e39)

Test "Accrue borrower STRK during a repayBorrowBehalf of 0"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (0.01e18) (0.01e18)
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 1000000000000000000000000000000000000
    FastForward 300000 Blocks
    Assert Equal (Comptroller StrikeAccrued Coburn) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) 1000000000000000000000000000000000000
    RepayBorrowBehalf Jared Coburn 0 sZRX
    Assert Equal (Comptroller StrikeAccrued Coburn) (3000e18)
    Comptroller ClaimStrike Coburn
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 3.001e39
    Assert Equal (Comptroller StrikeBorrowState sZRX "block") 300000
    Assert Equal (Erc20 STRK TokenBalance Coburn) (3000e18)
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) (3.001e39)

-- TODO: Test "Accrue STRK during a liquidation"

Test "Don't accrue borrower STRK during a transfer"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (0.01e18) (0.01e18)
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 1000000000000000000000000000000000000
    FastForward 300000 Blocks
    Assert Equal (Comptroller StrikeAccrued Coburn) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) 1000000000000000000000000000000000000
    Transfer Coburn Jared 1 sBAT
    Assert Equal (Comptroller StrikeAccrued Coburn) (0) -- STRK not accrued until Claim
    Comptroller ClaimStrike Coburn
    Assert Equal (Comptroller StrikeBorrowState sZRX "index") 3.001e39
    Assert Equal (Comptroller StrikeBorrowState sZRX "block") 300000
    Assert Equal (Erc20 STRK TokenBalance Coburn) (3000e18)
    Assert Equal (Comptroller StrikeBorrowerIndex sZRX Coburn) (3.001e39)

Test "Accrue supplier STRK during a transfer"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (0.01e18) (0)
    Assert Equal (Comptroller StrikeSupplyState sZRX "index") 1000000000000000000000000000000000000
    FastForward 300000 Blocks
    Assert Equal (Comptroller StrikeAccrued Geoff) 0
    Transfer Geoff Jared 1 sZRX
    Assert Equal (Comptroller StrikeAccrued Geoff) 3000e18 -- 0.01e18 * 300,000
    Assert Equal (Comptroller StrikeSupplyState sZRX "index") 120000000001000000000000000000000000000000000000
    Assert Equal (Comptroller StrikeSupplyState sZRX "block") 300000
    Assert Equal (Erc20 STRK TokenBalance Geoff) 0
    Comptroller ClaimStrike Geoff
    Assert Equal (Erc20 STRK TokenBalance Geoff) (3000e18)

Test "Accrues correctly when STRK rewards are added (after market activation), removed, then added again"
    FlywheelComptroller
    Prep Coburn 100000e18 BAT sBAT
    -- Mint test
    From Coburn (SToken sBAT Mint 1000e18)
    FastForward 1 Blocks
    -- Ensure no STRK rewards distributed
    Comptroller ClaimStrike Coburn
    Assert Equal (Erc20 STRK TokenBalance Coburn) (0)
    -- Fast forward to make us accrue a ton of interest (that is, if STRK speed has been non-zero)
    FastForward 2354251 Blocks
    -- Set STRK speeds to non-zero
    Comptroller SetStrikeSpeeds (sBAT) (1) (1)
    FastForward 2 Blocks
    -- Ensure minting still works
    From Coburn (SToken sBAT Mint 1000e18)
    -- Ensure we only accrued interest while the STRK speed has been non-zero
    Comptroller ClaimStrike Coburn
    Assert Equal (Erc20 STRK TokenBalance Coburn) (2)
    -- Set STRK speeds to zero
    Comptroller SetStrikeSpeeds (sBAT) (0) (0)
    FastForward 1 Blocks
    -- Ensure we only accrued interest while the STRK speed has been non-zero
    Comptroller ClaimStrike Coburn
    Assert Equal (Erc20 STRK TokenBalance Coburn) (2)
    -- Fast forward to make us accrue a ton of interest - we shouldn't as the rate is 0
    FastForward 2354251 Blocks
    -- Set STRK speeds to non-zero
    Comptroller SetStrikeSpeeds (sBAT) (1) (1)
    FastForward 1 Blocks
    -- Ensure minting still works
    From Coburn (SToken sBAT Mint 1000e18)
    -- Ensure we only accrued interest while the STRK speed has been non-zero
    Comptroller ClaimStrike Coburn
    Assert Equal (Erc20 STRK TokenBalance Coburn) (3)

Test "TransferSTRK handles running out of STRK in comptroller correctly"
    FlywheelComptroller price:1.0 borrowRate:0.000005 strikeInitAmount:1e18
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (1e18) (0)
    FastForward 2 Blocks
    Comptroller ClaimStrike Geoff
    Assert Equal (Comptroller StrikeAccrued Geoff) 2e18
    Assert Equal (Erc20 STRK TokenBalance Geoff) 0
    Give (Address Comptroller) 1e18 STRK
    Comptroller ClaimStrike Geoff
    Assert Equal (Comptroller StrikeAccrued Geoff) 0
    Assert Equal (Erc20 STRK TokenBalance Geoff) 2e18

Test "Strike is not claimed automatically"
    FlywheelComptroller
    InitUsage
    Comptroller SetStrikeSpeeds (sZRX) (2) (2)
    FastForward 100000 Blocks
    -- Check STRK is not claimed automatically
    Mint Geoff 50e18 sZRX
    Assert Equal (Erc20 STRK TokenBalance Geoff) 0
    -- Confirm there was STRK to claim
    Comptroller ClaimStrike Geoff
    Assert Equal (Erc20 STRK TokenBalance Geoff) 200000

Test "New STRK speeds apply to both prior borrowers+suppliers and later borrowers+suppliers correctly"
    -- Supplying
    --   Torrey mints 100e18 before STRK speeds set
    --   Jared mints 100e18 after STRK speeds set
    -- Borrowing
    --   Coburn borrows 10e18 before STRK speeds set
    --   Geoff borrows 10e18 after STRK speeds set
    FlywheelComptroller
    InitUsage2
    -- New token with no rewards
    NewSToken YFI sYFI
    Support sYFI collateralFactor:0.5
    Prep Torrey 100e18 YFI sYFI
    Mint Torrey 100e18 sYFI
    Prep Jared 100e18 YFI sYFI
    Borrow Coburn 10e18 sYFI
    EnterMarkets Geoff sZRX
    -- Add STRK rewards for the new token
    Comptroller SetStrikeSpeeds (sYFI) (2) (2)
    Mint Jared 100e18 sYFI
    Borrow Geoff 10e18 sYFI
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Coburn) 1e36
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Geoff) 1e36
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Torrey) 1e36
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Jared) 1e36
    FastForward 1000 blocks
    Comptroller ClaimStrike Jared
    Comptroller ClaimStrike Torrey
    Comptroller ClaimStrike Geoff
    Comptroller ClaimStrike Coburn
    Assert Equal (Erc20 STRK TokenBalance Coburn) 1000
    Assert Equal (Erc20 STRK TokenBalance Geoff) 1000
    Assert Equal (Erc20 STRK TokenBalance Jared) 1000
    Assert Equal (Erc20 STRK TokenBalance Torrey) 1000
    Assert Equal (Comptroller StrikeAccrued Coburn) 0
    Assert Equal (Comptroller StrikeAccrued Geoff) 0
    Assert Equal (Comptroller StrikeAccrued Jared) 0
    Assert Equal (Comptroller StrikeAccrued Torrey) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Coburn) (Comptroller StrikeBorrowerIndex sYFI Geoff)
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Jared) (Comptroller StrikeSupplierIndex sYFI Torrey)

Test "New STRK speeds apply to both prior borrowers+suppliers and later borrowers+suppliers correctly w/ uninitialized prior borrower/supplier state indices"
    -- Supplying
    --   Torrey mints 100e18 before STRK speeds set
    --   Jared mints 100e18 after STRK speeds set
    -- Borrowing
    --   Coburn borrows 10e18 before STRK speeds set
    --   Geoff borrows 10e18 after STRK speeds set
    FlywheelComptroller
    InitUsage2
    -- New token with no rewards
    NewSToken YFI sYFI
    Support sYFI collateralFactor:0.5
    Prep Torrey 100e18 YFI sYFI
    Mint Torrey 100e18 sYFI
    Prep Jared 100e18 YFI sYFI
    Borrow Coburn 10e18 sYFI
    EnterMarkets Geoff sZRX
    -- Set borrower and supplier state indices to 0 (uninitialized - before all market state indices were initialized properly)
    Comptroller Send "setStrikeBorrowerIndex(address,address,uint256)" (Address sYFI) (Address Coburn) 0
    Comptroller Send "setStrikeSupplierIndex(address,address,uint256)" (Address sYFI) (Address Torrey) 0
    -- Add STRK rewards for the new token
    Comptroller SetStrikeSpeeds (sYFI) (2) (2)
    Mint Jared 100e18 sYFI
    Borrow Geoff 10e18 sYFI
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Coburn) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Geoff) 1e36
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Torrey) 0
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Jared) 1e36
    FastForward 1000 blocks
    Comptroller ClaimStrike Jared
    Comptroller ClaimStrike Torrey
    Comptroller ClaimStrike Geoff
    Comptroller ClaimStrike Coburn
    Assert Equal (Erc20 STRK TokenBalance Coburn) 1000
    Assert Equal (Erc20 STRK TokenBalance Geoff) 1000
    Assert Equal (Erc20 STRK TokenBalance Jared) 1000
    Assert Equal (Erc20 STRK TokenBalance Torrey) 1000
    Assert Equal (Comptroller StrikeAccrued Coburn) 0
    Assert Equal (Comptroller StrikeAccrued Geoff) 0
    Assert Equal (Comptroller StrikeAccrued Jared) 0
    Assert Equal (Comptroller StrikeAccrued Torrey) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Coburn) (Comptroller StrikeBorrowerIndex sYFI Geoff)
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Jared) (Comptroller StrikeSupplierIndex sYFI Torrey)

Test "Zero STRK speed markets don't accrue rewards w/ uninitialized borrower/supplier state indices"
    -- Supplying
    --   Torrey mints 100e18 before STRK speeds set
    --   Jared mints 100e18 after STRK speeds set
    -- Borrowing
    --   Coburn borrows 10e18 before STRK speeds set
    --   Geoff borrows 10e18 after STRK speeds set
    FlywheelComptroller
    InitUsage2
    -- New token with no rewards
    NewSToken YFI sYFI
    Support sYFI collateralFactor:0.5
    Prep Torrey 100e18 YFI sYFI
    Mint Torrey 100e18 sYFI
    Prep Jared 100e18 YFI sYFI
    Borrow Coburn 10e18 sYFI
    EnterMarkets Geoff sZRX
    -- Set borrower and supplier state indices to 0 (uninitialized - before all market state indices were initialized properly)
    Comptroller Send "setStrikeBorrowerIndex(address,address,uint256)" (Address sYFI) (Address Coburn) 0
    Comptroller Send "setStrikeSupplierIndex(address,address,uint256)" (Address sYFI) (Address Torrey) 0
    Mint Jared 100e18 sYFI
    Borrow Geoff 10e18 sYFI
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Coburn) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Geoff) 1e36
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Torrey) 0
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Jared) 1e36
    FastForward 1000 blocks
    Comptroller ClaimStrike Jared
    Comptroller ClaimStrike Torrey
    Comptroller ClaimStrike Geoff
    Comptroller ClaimStrike Coburn
    Assert Equal (Erc20 STRK TokenBalance Coburn) 0
    Assert Equal (Erc20 STRK TokenBalance Geoff) 0
    Assert Equal (Erc20 STRK TokenBalance Jared) 0
    Assert Equal (Erc20 STRK TokenBalance Torrey) 0
    Assert Equal (Comptroller StrikeAccrued Coburn) 0
    Assert Equal (Comptroller StrikeAccrued Geoff) 0
    Assert Equal (Comptroller StrikeAccrued Jared) 0
    Assert Equal (Comptroller StrikeAccrued Torrey) 0
    Assert Equal (Comptroller StrikeBorrowerIndex sYFI Coburn) (Comptroller StrikeBorrowerIndex sYFI Geoff)
    Assert Equal (Comptroller StrikeSupplierIndex sYFI Jared) (Comptroller StrikeSupplierIndex sYFI Torrey)