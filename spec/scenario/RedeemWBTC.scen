-- Redeem Tests

Test "Mint WBTC then Redeem All"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check current affairs
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (SToken sWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Redeem Geoff 500e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) Zero
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 70e8

Test "Mint WBTC, Enter and then Redeem All"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check current affairs
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (SToken sWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    EnterMarkets Geoff sWBTC
    Redeem Geoff 500e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) Zero
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 70e8

Test "Mint WBTC then Redeem Part"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check current affairs
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (SToken sWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Redeem Geoff 250e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 250e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 45e8

Test "Mint WBTC then Redeem Too Much"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check and hold static
    Invariant Static (SToken sWBTC ExchangeRateStored)
    Invariant Remains (Erc20 sWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Now redeem after some time
    FastForward 2 Blocks
    AllowFailures
    Redeem Geoff 501e8 sWBTC
    Assert Failure MATH_ERROR REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED "3"

Test "Mint WBTC then Redeem Zero"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check current affairs
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Any other good invariants?
    Invariant Static (SToken sWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Redeem Geoff 0e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 20e8

Test "Mint WBTC then redeem with interest - no reserves"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Invariant Remains (SToken sWBTC Reserves) Zero
    Prep Geoff 50e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC sWBTC 10e8 5e8 interestRate:0.000001 blocks:500000
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   This is due pro-rata to all suppliers, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 55e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.11
    -- Now redeem all with interest
    Redeem Geoff 500e8 sWBTC
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 55e8
    Assert Equal (Erc20 WBTC TokenBalance sWBTC) 0e8
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 0e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 0e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.1

Test "Mint WBTC then redeem part with interest - no reserves"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Invariant Remains (SToken sWBTC Reserves) Zero
    Prep Geoff 50e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC sWBTC 10e8 5e8 interestRate:0.000001 blocks:500000
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   This is due pro-rata to all suppliers, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 55e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.11
    -- Now redeem all with interest
    Redeem Geoff 499e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 1e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 0.11e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.11

Test "Mint WBTC then redeem with reserves and interest"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 50e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 50e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.1
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest WBTC sWBTC 10e8 5e8 interestRate:0.000001 blocks:500000 reserveRate:0.2
    -- We've accrued .001% interest for 500000 blocks, or 50% of the principal,
    --   thus, we should have accrued 5e8 of interest for the protocol
    --   The reserves should get 20% of this, or 1e8, and the rest
    --   is due pro-rata to all suppliers. We just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 500e8
    Assert Equal (SToken sWBTC Reserves) 1e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 54e8
    -- 55e8 + 0e8 - 1e8 / 500
    Assert Equal (SToken sWBTC ExchangeRate) 0.108
    -- Now redeem all with interest
    Redeem Geoff 500e8 sWBTC
    Assert Equal (Erc20 WBTC TokenBalance Geoff) 54e8
    Assert Equal (Erc20 WBTC TokenBalance sWBTC) 1e8
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 0e8
    Assert Equal (SToken sWBTC Reserves) 1e8
    Assert Equal (SToken sWBTC UnderlyingBalance Geoff) 0e8
    Assert Equal (SToken sWBTC ExchangeRate) 0.1

Test "Two users Mint WBTC, one redeems"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff Some WBTC sWBTC
    Prep Torrey Some WBTC sWBTC
    Mint Geoff 2e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 20e8
    Assert Equal (Erc20 sWBTC TotalSupply) 20e8
    Mint Torrey 2e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 20e8
    Assert Equal (Erc20 sWBTC TokenBalance Torrey) 20e8
    Assert Equal (Erc20 sWBTC TotalSupply) 40e8
    Redeem Torrey 10e8 sWBTC
    Assert Equal (Erc20 sWBTC TokenBalance Geoff) 20e8
    Assert Equal (Erc20 sWBTC TokenBalance Torrey) 10e8
    Assert Equal (Erc20 sWBTC TotalSupply) 30e8

Test "Redeem WBTC transfer out fails"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check current affairs
    Invariant Remains (Erc20 sWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    Invariant Static (SToken sWBTC ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Erc20 WBTC Pause
    AllowFailures
    Redeem Geoff 500e8 sWBTC
    Assert Revert

Test "Mint WBTC, Enter, then Redeem Too Much (collateral factor: 0)"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check and hold static
    Invariant Static (SToken sWBTC ExchangeRateStored)
    Invariant Remains (Erc20 sWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Now redeem after some time
    FastForward 2 Blocks
    EnterMarkets Geoff sWBTC
    AllowFailures
    Redeem Geoff 501e8 sWBTC
    Assert Failure MATH_ERROR REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED "3"

Test "Mint WBTC, Enter, then Redeem Too Much (collateral factor: 0.1)"
    NewComptroller
    ListedSToken WBTC sWBTC initialExchangeRate:0.1 tokenType:WBTC
    Comptroller SetCollateralFactor sWBTC 0.1
    Prep Geoff 70e8 WBTC sWBTC
    Mint Geoff 50e8 sWBTC
    -- Check and hold static
    Invariant Static (SToken sWBTC ExchangeRateStored)
    Invariant Remains (Erc20 sWBTC TokenBalance Geoff) 500e8
    Invariant Remains (Erc20 WBTC TokenBalance Geoff) 20e8
    -- Now redeem after some time
    FastForward 2 Blocks
    EnterMarkets Geoff sWBTC
    AllowFailures
    Redeem Geoff 501e8 sWBTC
    Assert Failure COMPTROLLER_REJECTION REDEEM_COMPTROLLER_REJECTION INSUFFICIENT_LIQUIDITY
