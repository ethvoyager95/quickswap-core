-- Tests for repaying borrows

Macro NewBorrow borrowAmount borrowRate
    NewComptroller price:1.0 -- TODO: This should really be a price for a specific asset
    NewSToken ZRX sZRX
    NewSToken BAT sBAT borrowRate -- note: cannot use macros with named args right now
    Give sBAT 10e18 BAT -- Faucet some bat to borrow
    Support sZRX collateralFactor:0.5
    Support sBAT collateralFactor:0.5
    Prep Geoff Some ZRX sZRX
    Mint Geoff 100e18 sZRX
    EnterMarkets Geoff sZRX sBAT
    Borrow Geoff borrowAmount sBAT

Test "Borrow, hold a few blocks, and repay part"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance sBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token
    From Geoff (Erc20 BAT Approve sBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 sBAT
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Geoff) Zero
    Assert Equal (Erc20 BAT TokenBalance sBAT) 10e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 3e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 3e18

Test "Borrow, hold a few blocks, and repay full"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance sBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    Give Geoff 1.5e18 BAT -- Geoff had the 1.0e18 borrowed BAT
    From Geoff (Erc20 BAT Approve sBAT 2.5e18)
    RepayBorrow Geoff 2.5e18 sBAT
    Assert Equal (SToken sBAT BorrowBalance Geoff) 0e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Erc20 BAT TokenBalance sBAT) 11.5e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 0e18
    FastForward 200000 Blocks -- 0e18 * (1 + 200000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 0e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 0e18

Test "Borrow, hold a few blocks, and repay too much"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 0.001e18 * (1 + 300000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 10e18 BAT sBAT
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance sBAT) Zero
    RepayBorrow Geoff 10e18 sBAT
    Assert Revert "revert REPAY_BORROW_NEW_ACCOUNT_BORROW_BALANCE_CALCULATION_FAILED"
    -- Let's check the overall numbers
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 2.5e18

Test "Borrow, and get a negative total cash situation"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance sBAT) 9e18
    -- Let's zoom way forward into the future
    FastForward 9800000 Blocks -- 1e18 * (1 + 9800000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 50e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 50e18
    -- Now let's repay one full token
    From Geoff (Erc20 BAT Approve sBAT 1.0e18)
    RepayBorrow Geoff 1.0e18 sBAT
    Assert Equal (SToken sBAT BorrowBalance Geoff) 49e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 49e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 0e18
    Assert Equal (Erc20 BAT TokenBalance sBAT) 10e18

Test "Borrow, hold a few blocks, and repay behalf part"
    Invariant Success
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance sBAT) 9e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay one full token from another user
    Prep Torrey 1.0e18 BAT sBAT
    RepayBorrowBehalf Torrey Geoff 1.0e18 sBAT
    Assert Equal (SToken sBAT BorrowBalance Torrey) Zero
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1.5e18
    -- Let's check the overall numbers
    Assert Equal (Erc20 BAT TokenBalance Torrey) 0e18
    Assert Equal (Erc20 BAT TokenBalance Geoff) 1e18
    Assert Equal (Erc20 BAT TokenBalance sBAT) 10e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1.5e18
    FastForward 200000 Blocks -- 1.5e18 * (1 + 200000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Torrey) Zero
    Assert Equal (SToken sBAT BorrowBalance Geoff) 3e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 3e18

Test "Prohibit repay by comptroller rejection due to mock unlist"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 10e18 BAT sBAT
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance sBAT) Zero
    Comptroller UnList sZRX -- Mock unlist ZRX
    RepayBorrow Geoff 2.5e18 sZRX
    Assert Failure COMPTROLLER_REJECTION REPAY_BORROW_COMPTROLLER_REJECTION MARKET_NOT_LISTED
    -- Let's check the overall numbers
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient allowance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 100e18 BAT sBAT allowanceAmount:1.5e18
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance sBAT) Zero
    RepayBorrow Geoff 2.5e18 sBAT
    Assert Revert "revert Insufficient allowance"
    -- Let's check the overall numbers
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 2.5e18

Test "Repay fails with insufficient balance"
    NewBorrow borrowAmount:1e18 borrowRate:0.000005
    Assert Equal (SToken sBAT BorrowBalance Geoff) 1e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 1e18
    -- Now let's add some blocks and see what happs
    FastForward 300000 Blocks -- 1e18 * (1 + 300000 * 0.000005)
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    -- Now let's repay fully
    AllowFailures
    Prep Geoff 0e18 BAT sBAT allowanceAmount:2.5e18
    Expect Changes (Erc20 BAT TokenBalance Geoff) Zero
    Expect Changes (Erc20 BAT TokenBalance sBAT) Zero
    RepayBorrow Geoff 2.5e18 sBAT
    Assert Revert "revert Insufficient balance"
    -- Let's check the overall numbers
    Assert Equal (SToken sBAT BorrowBalance Geoff) 2.5e18
    Assert Equal (SToken sBAT TotalBorrowsCurrent) 2.5e18
