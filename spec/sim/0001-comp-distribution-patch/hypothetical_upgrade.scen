#!/usr/bin/env yarn repl -s

PrintTransactionLogs
Alias StrikeHolder "0x19bc62ff7cd9ffd6bdced9802ff718f09f7259f1"
Alias USDCWhale "0x92d7796c04ee34d1d16c57fab92fc2bccf434468"
Alias sBATBorrower "0xe5f3dbcc3dcf75a6946822aae7df5160505d3069"
Web3Fork "https://mainnet-eth.compound.finance/@10331520" (StrikeHolder USDCWhale sBATBorrower)
UseConfigs mainnet

-- Deploy the flywheel impl

ComptrollerImpl Deploy Standard ComptrollerG4

-- Propose to apply the patch

From StrikeHolder (STRK Delegate StrikeHolder)
From StrikeHolder (Governor GovernorAlpha Propose "STRK Distribution Patch" [(Address Unitroller) (Address ComptrollerG4)] [0 0] ["_setPendingImplementation(address)" "_become(address)"] [[(Address ComptrollerG4)] [(Address Unitroller)]])

-- Vote for, queue, and execute the proposal

MineBlock
From StrikeHolder (Governor GovernorAlpha Proposal LastProposal Vote For)
AdvanceBlocks 20000
Governor GovernorAlpha Proposal LastProposal Queue
IncreaseTime 604910
Governor GovernorAlpha Proposal LastProposal Execute

-- Sanity check the upgrade

Assert Equal (Comptroller StrikeRate) 0.25e18
Assert Equal (Comptroller CheckIsStriked sBAT) True
Assert Equal (Comptroller CheckIsStriked sDAI) True
Assert Equal (Comptroller CheckIsStriked sETH) True
Assert Equal (Comptroller CheckIsStriked sREP) True
Assert Equal (Comptroller CheckIsStriked sSAI) False
Assert Equal (Comptroller CheckIsStriked sUSDC) True
Assert Equal (Comptroller CheckIsStriked sUSDT) True
Assert Equal (Comptroller CheckIsStriked sWBTC) True
Assert Equal (Comptroller CheckIsStriked sZRX) True

-- Sanity check the speeds

Assert Equal (Comptroller StrikeSpeed sBAT) 0.211801939788283286e18
Assert Equal (Comptroller StrikeSpeed sDAI) 0.001175763573454607e18
Assert Equal (Comptroller StrikeSpeed sETH) 0.000020887685831991e18
Assert Equal (Comptroller StrikeSpeed sREP) 0.000007175802675015e18
Assert Equal (Comptroller StrikeSpeed sSAI) 0
Assert Equal (Comptroller StrikeSpeed sUSDC) 0.000884273506888560e18
Assert Equal (Comptroller StrikeSpeed sUSDT) 0.020341204032904166e18
Assert Equal (Comptroller StrikeSpeed sWBTC) 0.005869479211613005e18
Assert Equal (Comptroller StrikeSpeed sZRX) 0.009899276398349366e18

-- Check the market borrows

Assert Equal (SToken sBAT TotalBorrows) 816167647101108360363936140
Assert Equal (SToken sDAI TotalBorrows) 23521775646627969501566436
Assert Equal (SToken sETH TotalBorrows) 1260824767124865834187
Assert Equal (SToken sREP TotalBorrows) 5305791273320090270164
Assert Equal (SToken sSAI TotalBorrows) 87120566019791136455808
Assert Equal (SToken sUSDC TotalBorrows) 9369602511430
Assert Equal (SToken sUSDT TotalBorrows) 51344064688134
Assert Equal (SToken sWBTC TotalBorrows) 134858882039
Assert Equal (SToken sZRX TotalBorrows) 54734120640511560139309871

-- Check the market prices

Assert Equal (PriceOracleProxy Price sBAT) 1057982500000000
Assert Equal (PriceOracleProxy Price sDAI) 4296489354886929
Assert Equal (PriceOracleProxy Price sETH) 1000000000000000000
Assert Equal (PriceOracleProxy Price sREP) 71436527500000010
Assert Equal (PriceOracleProxy Price sSAI) 5285551943761727
Assert Equal (PriceOracleProxy Price sUSDC) 4261783149807061700000000000
Assert Equal (PriceOracleProxy Price sUSDT) 4261783149807061700000000000
Assert Equal (PriceOracleProxy Price sWBTC) 397626172108253540000000000000
Assert Equal (PriceOracleProxy Price sZRX) 1464966666666666

-- Refresh speeds

Comptroller RefreshStrikeSpeeds

-- Check the new speeds match utility metric
-- Total Utility =
--  816167647101108360363936140 * 1057982500000000 +
--  23521775646627969501566436 * 4296489354886929 +
--  1260824767124865834187 * 1000000000000000000 +
--  5305791273320090270164 * 71436527500000010 +
--  87120566019791136455808 * 5285551943761727 * 0 (sSAI not striked) +
--  9369602511430 * 4261783149807061700000000000 +
--  51344064688134 * 4261783149807061700000000000 +
--  134858882039 * 397626172108253540000000000000 +
--  54734120640511560139309871 * 1464966666666666
--  = 1358747565585977723277660096116431304676770

-- .25e18 * 816167647101108360363936140 * 1057982500000000 / 1358747565585977723277660096116431304676770
--  = 158876289748264717
Assert Equal (Comptroller StrikeSpeed sBAT) 158876289748264702

-- .25e18 * 23521775646627969501566436 * 4296489354886929 / 1358747565585977723277660096116431304676770
--  = 18594524331344760
Assert Equal (Comptroller StrikeSpeed sDAI) 18594524331344758

-- .25e18 * 1260824767124865834187 * 1000000000000000000 / 1358747565585977723277660096116431304676770
--  = 231982893485648
Assert Equal (Comptroller StrikeSpeed sETH) 231982893485648

-- .25e18 * 5305791273320090270164 * 71436527500000010 / 1358747565585977723277660096116431304676770
--  = 69738359391711
Assert Equal (Comptroller StrikeSpeed sREP) 69738359391711

-- not striked
Assert Equal (Comptroller StrikeSpeed sSAI) 0

-- .25e18 * 9369602511430 * 4261783149807061700000000000 / 1358747565585977723277660096116431304676770
--  = 7347062676498972
Assert Equal (Comptroller StrikeSpeed sUSDC) 7347062676498971

-- .25e18 * 51344064688134 * 4261783149807061700000000000 / 1358747565585977723277660096116431304676770
--  = 40260839333339567
Assert Equal (Comptroller StrikeSpeed sUSDT) 40260839333339565

-- .25e18 * 134858882039 * 397626172108253540000000000000 / 1358747565585977723277660096116431304676770
--  = 9866332495845221
Assert Equal (Comptroller StrikeSpeed sWBTC) 9866332495845221

-- .25e18 * 54734120640511560139309871 * 1464966666666666 / 1358747565585977723277660096116431304676770
--  = 14753230161829421
Assert Equal (Comptroller StrikeSpeed sZRX) 14753230161829420

-- Now sanity check that we can continue to use the market as usual

-- First check the USDC Whale, mint

Assert Equal (Erc20 sUSDC TokenBalance USDCWhale) 0

From USDCWhale (Trx GasPrice 0 (Erc20 USDC Approve sUSDC UInt256Max))
From USDCWhale (Trx GasPrice 0 (SToken sUSDC Mint 10000e6))

Assert Equal (Erc20 sUSDC TokenBalance USDCWhale) 47481980579468
Assert Equal (Erc20 sUSDC TotalSupply) 927050045835492296

-- Next check the BAT borrower, borrow a little more

Assert Equal (Erc20 sETH TokenBalance sBATBorrower) 384765976900
Assert Equal (Erc20 sETH TotalSupply) 4585405574577755

Assert Equal (SToken sBAT BorrowBalance sBATBorrower) 37550980777226218529804
Assert Equal (SToken sBAT TotalBorrows) 816167647101108360363936140

Expect Changes (SToken sBAT BorrowBalance sBATBorrower) 6666005042256047300989
From sBATBorrower (SToken sBAT Borrow 6666000000000000000000)

Assert Equal (SToken sBAT BorrowBalance sBATBorrower) 44216985819482265830793
Assert Equal (SToken sBAT TotalBorrows) 818374059192055804747435060

-- Claim strk to true up their balances

Comptroller ClaimStrike USDCWhale
Comptroller ClaimStrike sBATBorrower

-- Now move the clock forward

AdvanceBlocks 1000000

-- And check that they receive the right amount of STRK when claimed

-- sUSDC: 47481980579468 / 927050045835492296 * 7347062676498971 * 1e6 = 376304482038247230
Expect Changes (Erc20 STRK TokenBalance USDCWhale) 0.376305610951693392e18
Comptroller ClaimStrike USDCWhale

-- sETH: 384765976900 / 4585405574577755 * 231982893485648 * 1e6 = 19465917067611490
-- sBAT: 44216985819482265830793 / 818374059192055804747435060 * 158876289748264702 * 1e6 = 8584131635094196000
--  = 0.01946591706761149 + 8.584131635094196000 = 8.603597552161807
Expect Changes (Erc20 STRK TokenBalance sBATBorrower) 8.603623362954463581e18
Comptroller ClaimStrike sBATBorrower

Print "STRK distribution patch OK!"
